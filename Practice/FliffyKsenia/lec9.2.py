# Список праздников в РФ в соответствии ТК РФ.
# 1, 2, 3, 4, 5, 6 и 8 января: Новый год
# 7 января: Рождество Христово
# 23 февраля: День защитника Отечества
# 8 марта: Международный женский день
# 1 мая: Праздник Весны и Труда
# 9 мая: День Победы
# 12 июня: День России
# 4 ноября: День народного единства
import datetime


def working_days(start_time, end_time):
    # Массив официальных праздников по ТК РФ.
    red_days = [[1, 1], [2, 1], [3, 1], [4, 1], [5, 1], [6, 1], [7, 1], [8, 1], [23, 2], [8, 3], [1, 5], [9, 5],
                [12, 6], [4, 11]]
    worked_days = 0                # объявляем переменную отвечающую за количество рабочих дней.
    while start_time <= end_time:  # начинаем обход дней в нужном нам диапазоне.
        # проверяем день является ли он рабочим. т.е. что день не является субботой или воскресением, а также не попадает в список праздников РФ.
        if not (start_time.weekday() >= 5 or [start_time.day, start_time.month] in red_days):
            worked_days += 1  # проверка прошла успешно, значит добавляем к итоговому количеству дней новый день.
        start_time = start_time + datetime.timedelta(1) # прибавляем 1 день к начальной дате.
    return worked_days       # возвращаем получившиеся количество рабочих дней.


start_day = "01.01.2021" # объявляем начальную дату диапазона в формате ДД.ММ.ГГГГ
end_day = "14.01.2022"   # объявляем конечную дату диапозона в формате ДД.ММ.ГГГГ
# выводим результат работы нашей фукции.
print(working_days(datetime.datetime.strptime(start_day, "%d.%m.%Y"), datetime.datetime.strptime(end_day, "%d.%m.%Y")))
